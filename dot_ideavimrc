source ~/.vimrc

if has('ide')
set clipboard+=unnamed
    set clipboard+=ideaput
    " Smart join for <C-J>
    set ideajoin
    set ideamarks
    set idearefactormode=keep
    " Ideavim Extension for switching to English in normal"
    let g:KeepEnglishName_package_name_package_name = "org.sil.ukelele.keyboardlayout.abcnl.abcnl"
    set keep-english-in-normal-and-restore-in-insert
    " Ideavim Extension for switching to English in normal"

    " Config manipulations
    nnoremap \r :action IdeaVim.ReloadVimRc.reload<CR>
    " Config manipulations

    " IDE menus
    map <leader>mg <Action>(Git.MainMenu)

    map <leader>mp <Action>(ManageRecentProjects)
    map <leader>mn <Action>(ShowNavBar)
    map <leader>mv <Action>(ActivateProjectToolWindow)
    map <leader>ml <Action>(SelectInProjectView)

    map <leader>mr <Action>(ChooseRunConfiguration)
    map <leader>md <Action>(ChooseDebugConfiguration)

    map <leader>ms <Action>(SurroundWithLiveTemplate)

    map <leader>mo <Action>(FileStructurePopup)
    map <leader>mu <Action>(FindUsagesMenuGroup)
    map <leader>mh <Action>(CallHierarchy)
    " IDE menus

    " Tool windows
    nnoremap <c-p> :action JumpToLastWindow<CR>
    nnoremap <c-h> :action HideAllWindows<CR>

    " Hover mapping
    map gh <Action>(ShowErrorDescription)

    " Terminal
    map <leader>tt <Action>(ActivateTerminalToolWindow)
    map <leader>te <Action>(Terminal.OpenInTerminal)
    " Terminal

    " Find actions
    map ,fg <Action>(FindInPath)
    map ,ff <Action>(GotoFile)
    map ,fa <Action>(GotoAction)
    map ,fs <Action>(GotoSymbol)

    " Splitting editor
    map gsx <Action>(SplitHorizontally)
    map gsy <Action>(SplitVertically)
    map gsn <Action>(NextSplitter)
    map gsN <Action>(PrevSplitter)
    map gsu <Action>(Unsplit)<Action>(ActivateProjectToolWindow)
    map gsU <Action>(UnsplitAll)<Action>(ActivateProjectToolWindow)
    " Splitting editor

    " Refactoring
    map <leader>rn <Action>(RenameElement)
    map <leader>rr <Action>(ReformatCode)
    map <leader>re <Action>(Javascript.Linters.EsLint.Fix)
    map <leader>rs <Action>(Tool_External Tools_Stylelint.Fix)
    map <leader>ri <Action>(OptimizeImports)
    map <leader>rt <Action>(Refactorings.QuickListPopupAction)
    " Refactoring

    " History
    map <leader>hg <Action>(Vcs.ShowTabbedFileHistory)
    map <leader>hl <Action>(LocalHistory.ShowHistory)
    " History

    map <leader>a <Action>(Annotate)
    map <leader>b <Action>(ToggleLineBreakpoint)

    " built-in navigation to navigated items works better
    nmap <c-o> <Action>(Back)
    nmap <c-i> <Action>(Forward)
    " but preserve ideavim defaults
    nnoremap g<c-o> <c-o>
    nnoremap g<c-i> <c-i>

    " built in search
    xnoremap g/ :action Find<cr>
    noremap g/ :action Find<cr>

endif
